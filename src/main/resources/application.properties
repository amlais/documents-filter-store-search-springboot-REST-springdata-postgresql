#DataBase Driver
spring.database.driverClassName=org.postgresql.Driver
server.port=8088
security.basic.enable=false
#Multipart config
spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=100MB

#Jpa properties
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.database=POSTGRESQL

#Security Autoconfiguration Customisation
#spring.security.user.name=amir
#spring.security.user.password=amir
#spring.security.user.roles=ADMIN
#Enable logging on Run application
#logging.level.org.springframework.data=RUN
# Specify the DirectoryProvider to use (the Lucene Directory)
#spring.jpa.properties.hibernate.search.default.directory_provider = filesystem

# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
#spring.jpa.properties.hibernate.search.default.indexBase = file:/C:/workspace1/springbootUploadApp/lucene/indexes/
#Datasource type and identifiers
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/upload_cvs
spring.datasource.username=postgres
spring.datasource.password=postgres2017
#spring.datasource.data=file:/C:/workspace1/springbootUploadApp/src/main/resources/scripts/data.sql

#elasticsearch distant server Configuration cluster is been configurated in my local machine
elasticsearch.clustername = amir-cluster
elasticsearch.host = localhost
elasticsearch.port = 9300
#
# Home directory of the embedded Elasticsearch instance. Default to the
# current working directory.
#
#spring.data.elasticsearch.properties.path.home=target/elastic-embedded
#spring.data.elasticsearch.properties.transport.tcp.connect_timeout=60s
#spring.data.elasticsearch.cluster-nodes=localhost:9300 
#spring.data.elasticsearch.repositories.enabled=true

#Oauth2 resource filter will be fixed within next releases
#security.oauth2.resource.filter-order=3

#Security encoding properties
#security.signing-key=MaYzkSjmkzPC57L
#security.encoding-strength=256
#security.security-realm=Spring Boot JWT Example Realm

#http oauth2 client informations
#security.jwt.client-id=testjwtclientid
#security.jwt.client-secret=XY7kmzoNzl100
#security.jwt.grant-type=password
#security.jwt.scope-read=read
#security.jwt.scope-write=write
#security.jwt.resource-ids=testjwtresourceid