#DataBase Driver
spring.database.driverClassName=org.postgresql.Driver
server.port=8088
security.oauth2.resource.filter-order=3
#Multipart config
spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=100MB

#Jpa properties
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.hbm2ddl.auto=create
spring.jpa.database=POSTGRESQL

#Enable logging on Run application
#logging.level.org.springframework.data=RUN
# Specify the DirectoryProvider to use (the Lucene Directory)
#spring.jpa.properties.hibernate.search.default.directory_provider = filesystem

# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
#spring.jpa.properties.hibernate.search.default.indexBase = file:/C:/workspace1/springbootUploadApp/lucene/indexes/
#Datasource type and identifiers
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/upload_cvs
spring.datasource.username=postgres
spring.datasource.password=postgres2017
#spring.datasource.data=file:/C:/workspace1/springbootUploadApp/src/main/resources/scripts/data.sql

#elasticsearch distant server Configuration cluster is been configurated in my local machine
elasticsearch.clustername = amir-cluster
elasticsearch.host = localhost
elasticsearch.port = 9300